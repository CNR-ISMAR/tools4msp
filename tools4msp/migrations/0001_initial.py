# Generated by Django 2.2.2 on 2019-06-24 14:18

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('grid_resolution', models.FloatField(default=1000, help_text='in meters')),
                ('area_of_interest', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('is_published', models.BooleanField(default=False, help_text='Should this Case Study be published?', verbose_name='Is Published')),
                ('tools4msp', models.BooleanField(default=False, help_text='Is this a Tools4MSP Case Study?', verbose_name='Tools4MSP Case Study')),
                ('tool_coexist', models.BooleanField()),
                ('tool_ci', models.BooleanField()),
                ('tool_mes', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'Case studies',
                'permissions': (('download_casestudy', 'Download case study'), ('run_casestudy', 'Run case study')),
            },
        ),
        migrations.CreateModel(
            name='CaseStudyGrid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.TextField(blank=True, null=True, verbose_name='Pre-processing expression')),
                ('resource_file', models.CharField(blank=True, max_length=500, null=True)),
                ('thumbnail_url', models.CharField(blank=True, max_length=500, null=True)),
                ('expression_hash', models.CharField(blank=True, max_length=32)),
                ('maxvalue', models.FloatField(blank=True, null=True)),
                ('minvalue', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('reference_date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100)),
                ('label', models.CharField(max_length=100)),
                ('expression', models.TextField(blank=True, null=True, verbose_name='Pre-processing expression')),
                ('dataset_type', models.CharField(choices=[('grid', 'Grid'), ('use', 'Activity & Uses'), ('env', 'Environmental Component'), ('pre', 'Pressure')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Pressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Use',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField()),
                ('distance', models.FloatField(default=0)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Context')),
                ('pressure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Pressure')),
                ('use', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Use')),
            ],
        ),
        migrations.CreateModel(
            name='Sensitivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensitivity', models.FloatField()),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Context')),
                ('env', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Env')),
                ('pressure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Pressure')),
            ],
            options={
                'verbose_name_plural': 'Sensitivities',
            },
        ),
        migrations.CreateModel(
            name='ESCapacity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_provisioning', models.FloatField(blank=True, null=True)),
                ('raw_material', models.FloatField(blank=True, null=True)),
                ('air_quality', models.FloatField(blank=True, null=True)),
                ('disturbance_protection', models.FloatField(blank=True, null=True)),
                ('water_quality', models.FloatField(blank=True, null=True)),
                ('biological_control', models.FloatField(blank=True, null=True)),
                ('cycling_of_nutrients', models.FloatField(blank=True, null=True)),
                ('cognitive_benefits', models.FloatField(blank=True, null=True)),
                ('leisure', models.FloatField(blank=True, null=True)),
                ('feel_good_warm_glove', models.FloatField(blank=True, null=True, verbose_name='Feel good/warm glove')),
                ('educational_and_research', models.FloatField(blank=True, null=True)),
                ('non_use_ethical_values_iconic_species', models.FloatField(blank=True, null=True, verbose_name='Non use/ethical values/iconic species')),
                ('photosynthesis', models.FloatField(blank=True, null=True)),
                ('nutrient_cycling', models.FloatField(blank=True, null=True)),
                ('nursery', models.FloatField(blank=True, null=True)),
                ('biodiversity', models.FloatField(blank=True, null=True)),
                ('env', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Env')),
            ],
            options={
                'verbose_name_plural': 'ES Capacities',
            },
        ),
        migrations.CreateModel(
            name='CaseStudyUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.TextField(blank=True, null=True, verbose_name='Pre-processing expression')),
                ('resource_file', models.CharField(blank=True, max_length=500, null=True)),
                ('thumbnail_url', models.CharField(blank=True, max_length=500, null=True)),
                ('expression_hash', models.CharField(blank=True, max_length=32)),
                ('maxvalue', models.FloatField(blank=True, null=True)),
                ('minvalue', models.FloatField(blank=True, null=True)),
                ('casestudy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.CaseStudy')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Use')),
            ],
            options={
                'ordering': ['name__label'],
            },
        ),
        migrations.CreateModel(
            name='CaseStudyRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('area_of_interest', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('configuration', jsonfield.fields.JSONField()),
                ('casestudy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.CaseStudy')),
                ('out_ci', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='casestudyrun_ci', to='tools4msp.Layer')),
                ('out_coexist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='casestudyrun_coexist', to='tools4msp.Layer')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_casestudyrun', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
        ),
        migrations.CreateModel(
            name='CaseStudyPressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.TextField(blank=True, null=True, verbose_name='Pre-processing expression')),
                ('resource_file', models.CharField(blank=True, max_length=500, null=True)),
                ('thumbnail_url', models.CharField(blank=True, max_length=500, null=True)),
                ('expression_hash', models.CharField(blank=True, max_length=32)),
                ('maxvalue', models.FloatField(blank=True, null=True)),
                ('minvalue', models.FloatField(blank=True, null=True)),
                ('casestudy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.CaseStudy')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Pressure')),
                ('source_use', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Use')),
            ],
            options={
                'ordering': ['name__label'],
            },
        ),
        migrations.CreateModel(
            name='CaseStudyEnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.TextField(blank=True, null=True, verbose_name='Pre-processing expression')),
                ('resource_file', models.CharField(blank=True, max_length=500, null=True)),
                ('thumbnail_url', models.CharField(blank=True, max_length=500, null=True)),
                ('expression_hash', models.CharField(blank=True, max_length=32)),
                ('maxvalue', models.FloatField(blank=True, null=True)),
                ('minvalue', models.FloatField(blank=True, null=True)),
                ('casestudy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.CaseStudy')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools4msp.Env')),
            ],
            options={
                'ordering': ['name__label'],
            },
        ),
        migrations.AddField(
            model_name='casestudy',
            name='grid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tools4msp.CaseStudyGrid', verbose_name='Area of analysis'),
        ),
    ]
